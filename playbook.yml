---
- hosts: web
  remote_user: servervm
  become: yes
  become_method: sudo
  vars:
    http_port: 80
    domain: example.com
  tasks:
    - name: Instalando Apache Web Server
      apt: name={{ item }} state=latest update_cache=true
      with_items:
        - php7.0
        - apache2
        - libapache2-mod-php7.0
        - php7.0-mysql
        - php7.0-curl 
        - php7.0-gd 
        - php7.0-intl 
        - php-pear 
        - php-imagick 
        - php7.0-imap 
        - php7.0-mcrypt 
        - php-memcache 
        - php7.0-pspell 
        - php7.0-recode 
        - php7.0-sqlite3 
        - php7.0-tidy 
        - php7.0-xmlrpc 
        - php7.0-xsl 
        - php7.0-mbstring 
        - php-gettext
        - mysql-client

    - name: Habilitando el módulo mod_rewrite
      apache2_module: name=rewrite state=present
      notify:
        - Reiniciando apache

    - name: Habilitando módulo pdo_mysql
      command: phpenmod pdo_mysql
      notify:
        - Reiniciando apache

    - name: Deshabilitamos el virtualhost por defecto con el comando a2dissite
      command: a2dissite 000-default.conf
      args:
        creates: /etc/apache2/sites-available/{{ domain }}.conf
      notify:
        - Reiniciando apache

    - name: Creando un fichero virtualhost para example.com
      template: src=virtualhost.conf dest=/etc/apache2/sites-available/{{ domain }}.conf

    - name: Ejecutar el comando a2ensite
      command: a2ensite {{ domain }}
      args:
        creates: /etc/apache2/sites-available/{{ domain }}.conf
      notify:
        - Reiniciando apache
    
    - name: Creando el directorio /var/www/{{ domain }}, sino existe.
      file: path=/var/www/{{ domain }} state=directory

    #- name: Copiamos el fichero index.html en /var/www/{{ domain }}
    #  copy: src=index.html dest=/var/www/{{ domain }}/

    - name: Copiamos el fichero index.php en /var/www/{{ domain }}
      copy: src=index.php dest=/var/www/{{ domain }}/

    - name: Deshabilitamos el virtualhost por defecto con el comando a2dissite
      command: a2dissite 000-default.conf
      args:
        creates: /etc/apache2/sites-available/{{ domain }}.conf

    - name: Añadir en /etc/hosts el acceso local a http://example.com
      lineinfile: path=/etc/hosts regexp='^192\.168\.1\.142' line='192.168.1.142 example.com'

  handlers:
    - name: Reiniciando apache
      service: name=apache2 state=restarted

- hosts: ddbb
  remote_user: servervm
  become: yes
  become_method: sudo
  vars:
    ddbb: app
    web: 192.168.1.142    
    web_user: appuser
    password: 1234
  tasks:
    - name: Instalando MySQL
      apt: name={{ item }} state=installed
      with_items:
        - python-mysqldb
        - mysql-server
        - mysql-client

    - name: Iniciando servicio de MySQL
      service: name=mysql state=started

#    - name: Cambiando contraseña de root
#      mysql_user: name=root password=1234 host=localhost priv=*.*:ALL,GRANT state=present

    - name: Copiando my.cnf del usuario root.
      template: src=my.cnf dest=/root/.my.cnf owner=root mode=0600
      notify:
        - Reiniciando servicio de MySQL

    - name: Habilitando el acceso desde otra maquinas
      lineinfile: path=/etc/mysql/mysql.conf.d/mysqld.cnf regexp='^bind-address*' line='bind-address	= 0.0.0.0'

    - name: Reiniciando servicio de MySQL
      service: name=mysql state=restarted

    - name: Creando base de datos de aplicación
      mysql_db: name={{ ddbb }} state=present collation=utf8_general_ci

    - name: Copiando en el servidor datos iniciales
      copy: src=app-dump.sql dest=/tmp/dump.sql

    - name: Cargar datos iniciales
      shell: cat /tmp/dump.sql | mysql -u root -p{{ password }} {{ ddbb }}

    - name: Creando usuario de aplicación
      mysql_user: name={{ web_user }} password={{ password }} host={{ web }} priv=app.*:SELECT,INSERT,UPDATE,DELETE state=present
